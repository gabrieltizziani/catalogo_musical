<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciamento de Discos</title>
    <link rel="stylesheet" href="/style.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <h1>Gerenciamento de Discos</h1>

    <!-- Formulário de Cadastro/Atualização -->
    <section>
        <h2>Cadastrar/Editar Disco</h2>
        <form id="formDisco" enctype="multipart/form-data">
            <label for="titulo">Título:</label>
            <input type="text" id="titulo" name="titulo" required>
        
            <label for="anoLancamento">Ano de Lançamento:</label>
            <input type="number" id="anoLancamento" name="anoLancamento" required>
        
            <label for="capa">Capa do Disco:</label>
            <input type="file" id="capa" name="capa" accept="image/*">
            <img id="previewCapa" alt="Preview da Capa" width="100">

            <label for="artistaIds">Artistas:</label>
            <select id="artistaIds" name="artistaIds" multiple></select>
        
            <label for="generoIds">Gêneros:</label>
            <select id="generoIds" name="generoIds" multiple></select>
        
            <label for="faixas">Faixas:</label>
            <textarea id="faixas" name="faixas" rows="5" placeholder="Digite as faixas no formato: faixa 1 - 3:00"></textarea>
        
            <button type="submit">Cadastrar</button>
        </form>
    </section>

    <!-- Lista de Discos -->
    <section>
        <h2>Lista de Discos</h2>
        <table border="1">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Título</th>
                    <th>Ano</th>
                    <th>Capa</th>
                    <th>Artistas</th>
                    <th>Gêneros</th>
                    <th>Faixas</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody id="listaDiscos"></tbody>
        </table>
    </section>

    <script>
        // Configurar a baseURL do Axios
        axios.defaults.baseURL = 'http://localhost:3000';

        // Preview da capa ao selecionar arquivo
        document.getElementById('capa').addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = e => document.getElementById('previewCapa').src = e.target.result;
                reader.readAsDataURL(file);
            }
        });

        // Carregar artistas e gêneros no select
        async function carregarArtistas() {
            try {
                const response = await axios.get('/api/artistas');
                const select = document.getElementById('artistaIds');
                select.innerHTML = ''; // Limpa opções existentes
                response.data.forEach(artista => {
                    const option = document.createElement('option');
                    option.value = artista.id;
                    option.textContent = artista.nomeArtista;
                    select.appendChild(option);
                });
            } catch (error) {
                console.error('Erro ao carregar artistas:', error);
            }
        }

        async function carregarGeneros() {
            try {
                const response = await axios.get('/api/generos');
                const select = document.getElementById('generoIds');
                select.innerHTML = ''; // Limpa opções existentes
                response.data.forEach(genero => {
                    const option = document.createElement('option');
                    option.value = genero.id;
                    option.textContent = genero.nome;
                    select.appendChild(option);
                });
            } catch (error) {
                console.error('Erro ao carregar gêneros:', error);
            }
        }

        async function carregarDiscos() {
            try {
                const response = await axios.get('/api/discos');
                const tabela = document.getElementById('listaDiscos');
                tabela.innerHTML = ''; // Limpa a tabela

                response.data.forEach(disco => {
                    const row = document.createElement('tr');

                    // ID
                    const idCell = document.createElement('td');
                    idCell.textContent = disco.id;
                    row.appendChild(idCell);

                    // Título
                    const tituloCell = document.createElement('td');
                    tituloCell.textContent = disco.titulo;
                    row.appendChild(tituloCell);

                    // Ano
                    const anoCell = document.createElement('td');
                    anoCell.textContent = disco.anoLancamento;
                    row.appendChild(anoCell);

                    // Capa
                    const capaCell = document.createElement('td');
                    if (disco.capa) {
                        const img = document.createElement('img');
                        img.src = `/uploads/${disco.capa}`;
                        img.alt = `Capa do disco ${disco.titulo}`;
                        img.width = 50;
                        capaCell.appendChild(img);
                    } else {
                        capaCell.textContent = 'Sem capa';
                    }
                    row.appendChild(capaCell);

                    // Artistas
                    const artistasCell = document.createElement('td');
                    artistasCell.textContent = disco.artistas.map(a => a.nomeArtista).join(', ');
                    row.appendChild(artistasCell);

                    // Gêneros
                    const generosCell = document.createElement('td');
                    generosCell.textContent = disco.Generos.map(g => g.nome).join(', ');
                    row.appendChild(generosCell);

                    // Faixas
                    const faixasCell = document.createElement('td');
                    faixasCell.textContent = disco.faixas.map(f => `${f.numeroFaixa}. ${f.titulo}`).join('\n');
                    row.appendChild(faixasCell);

                    // Ações
                    const acoesCell = document.createElement('td');

                    // Botão de Editar
                    const editarBtn = document.createElement('button');
                    editarBtn.textContent = 'Editar';
                    editarBtn.addEventListener('click', () => editarDisco(disco.id));
                    acoesCell.appendChild(editarBtn);

                    // Botão de Excluir
                    const excluirBtn = document.createElement('button');
                    excluirBtn.textContent = 'Excluir';
                    excluirBtn.addEventListener('click', () => excluirDisco(disco.id));
                    acoesCell.appendChild(excluirBtn);

                    row.appendChild(acoesCell);

                    tabela.appendChild(row);
                });
            } catch (error) {
                console.error('Erro ao carregar discos:', error);
            }
        }
        // Editar disco
        async function editarDisco(id) {
            try {
                const response = await axios.get(`/api/discos/${id}`);
                const disco = response.data;
                document.getElementById('titulo').value = disco.titulo;
                document.getElementById('anoLancamento').value = disco.anoLancamento;
                // Preencher artistas, gêneros e faixas, se necessário
            } catch (error) {
                console.error('Erro ao carregar disco para edição:', error);
            }
        }

        // Cadastrar ou atualizar disco
        document.getElementById('formDisco').addEventListener('submit', async function (e) {
            e.preventDefault();
            const formData = new FormData(this);
            try {
                await axios.post('/api/discos', formData, {
                    headers: { 'Content-Type': 'multipart/form-data' }
                });
                alert('Disco cadastrado/atualizado com sucesso!');
                carregarDiscos();
            } catch (error) {
                console.error('Erro ao salvar disco:', error);
            }
        });

        // Excluir disco
        async function excluirDisco(id) {
            try {
                if (confirm('Tem certeza que deseja excluir este disco?')) {
                    await axios.delete(`/api/discos/${id}`);
                    alert('Disco excluído com sucesso!');
                    carregarDiscos();
                }
            } catch (error) {
                console.error('Erro ao excluir disco:', error);
            }
        }

        // Carregar dados iniciais
        carregarArtistas();
        carregarGeneros();
        carregarDiscos();
    </script>
</body>
</html>